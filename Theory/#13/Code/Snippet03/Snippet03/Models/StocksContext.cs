// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Snippet03.Models
{
    public partial class StocksContext : DbContext
    {
        public StocksContext()
        {
        }

        public StocksContext(DbContextOptions<StocksContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Price> Prices { get; set; }
        public virtual DbSet<Ticker> Tickers { get; set; }
        public virtual DbSet<TodaysCondition> TodaysConditions { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=localhost;Initial Catalog=Stocks;User ID=sa;Password=HelloWorld10");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Price>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Date)
                    .HasColumnType("date")
                    .HasColumnName("date");

                entity.Property(e => e.Price1)
                    .HasColumnType("decimal(18, 5)")
                    .HasColumnName("price");

                entity.Property(e => e.TickerId).HasColumnName("tickerId");

                entity.HasOne(d => d.Ticker)
                    .WithMany(p => p.Prices)
                    .HasForeignKey(d => d.TickerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Prices_Tickers");
            });

            modelBuilder.Entity<Ticker>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ticker1)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("ticker");
            });

            modelBuilder.Entity<TodaysCondition>(entity =>
            {
                entity.ToTable("TodaysCondition");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.State).HasColumnName("state");

                entity.Property(e => e.TickerId).HasColumnName("tickerId");

                entity.HasOne(d => d.Ticker)
                    .WithMany(p => p.TodaysConditions)
                    .HasForeignKey(d => d.TickerId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TodaysCondition_Tickers");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}